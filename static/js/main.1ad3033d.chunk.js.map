{"version":3,"sources":["pages/main.module.css","pages/delete.module.css","pages/admin.module.css","pages/delete.js","pages/destination.js","pages/get1.js","pages/get.js","pages/location.js","pages/status.js","pages/main.js","pages/admin.js","parcels/Admin1.js","parcels/body.js","parcels/getall.js","pages/login.js","parcels/login.js","pages/post.js","parcels/post.js","pages/register.js","parcels/register.js","App.js","index.js"],"names":["module","exports","CancelData","useState","delt","setDelt","delRef","useRef","className","classes","form","onSubmit","event","preventDefault","id","current","value","fetch","method","mode","crossDomain","body","JSON","stringify","headers","then","response","json","data","htmlFor","name","type","required","ref","role","DesForm","myId","desRef","destina","setDestina","address","setAddress","enteredDes","dat","window","location","reload","onChange","getInputProps","getSuggestionItemProps","suggestions","loading","autoFocus","map","suggestion","description","Purpos","val","load","setLoad","_id","destination","recipient","phone","status","onClick","alert","GetData","confirm","document","title","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","overlay","background","RegisterData","parse","localStorage","getItem","getResult","setGetResult","order","setOrder","deliver","setDeliver","transit","setTransit","entry","setEntry","useEffect","filter","item","length","to","cellPadding","margin","LocationData","locationRef","nameRef","locate","setLocate","Id","add","placeholder","LocForm","myne","locRef","enteredLoc","console","log","WelcomePage","timec","setTimec","changes","setChanges","gist","counter","setInterval","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","day","bod","mage","footer","footerCon","AdminForm","props","userRef","passRef","username","password","sendData","AdminParcel","Valu","setValu","Navigate","useNavigate","Modal","setAppElement","Tbod","valo","editable","del","ReceiveAll","contact","setContact","edity","delet","oncance","cellSpacing","LoginForm","email","LoginParcel","History","setItem","PostForm","address1","setAddress1","setValue","destinationRef","phoneRef","recipientRef","enteredPhone","enteredRecipient","international","defaultCountry","countryCallingCodeEditable","placeholders","PostParcel","setData","Response","RegisterForm","passw","setPassw","emailv","setEmailv","cpassRef","firstRef","lastRef","emailRef","addressRef","enteredCpass","enteredPass","enteredFirst","enteredLast","enteredEmail","enteredAddress","confirmPassword","nama","namo","match","RegisterParcel","stat","setStat","App","path","element","index","ReactDOM","render","basename","process","exact","getElementById"],"mappings":"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","file":"static/js/main.1ad3033d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"main_top__2Id-j\",\"mage\":\"main_mage__3P7_w\",\"bod\":\"main_bod__1vSBs\",\"footer\":\"main_footer__1Yv2s\",\"footerCon\":\"main_footerCon__34zvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"delete_form__1GcHF\",\"p\":\"delete_p__2Zg1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"admin_form__2sFkH\"};","import { useState, useRef } from 'react';\r\nimport classes from './delete.module.css'\r\n\r\nfunction CancelData() {\r\n    \r\n    const [delt, setDelt] = useState();\r\n    const delRef = useRef();\r\n\r\n    function deletion(event) {\r\n        event.preventDefault();\r\n\r\n        const id = delRef.current.value\r\n        fetch(`http://localhost:5000/parcel/${id}/cancel`, {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            crossDomain: 'true',\r\n            body: JSON.stringify(id),\r\n            headers: {\r\n                'Content-Type': 'application/json:charset=utf-8'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setDelt(JSON.stringify(data));\r\n            });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={deletion}>\r\n            <label htmlFor='myId'> RefID </label>\r\n            <input name='myId' type='text' required ref={delRef} />\r\n            <button type='submit'> Delete</button>\r\n            {delt && <div role='alert' ><pre>{delt}</pre> </div> }\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default CancelData;","import { useRef, useState } from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nfunction DesForm({myId}) {\r\n    const desRef = useRef(null);\r\n    \r\n    const [destina, setDestina] = useState();\r\n    const [address, setAddress] =useState('');\r\n\r\n\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredDes = desRef.current.value;\r\n    \r\n        const id = myId;\r\n\r\n        const dat = {\r\n             \"id\" : id,\r\n             \"destination\" : enteredDes\r\n        }\r\n\r\n\r\n        fetch(`https://web-app-senditb.herokuapp.com/parcel/${id}/destination`, {\r\n\r\n            method: 'PUT',\r\n            body: JSON.stringify(dat),\r\n            mode: 'cors',\r\n            crossDomain: 'true',\r\n            headers:{\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n            \r\n           \r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                window.location.reload();\r\n                setDestina('')\r\n            });\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                <PlacesAutocomplete\r\n                    value={address}\r\n                    onChange={setAddress}\r\n                >\r\n                    {({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\r\n                        <div>\r\n                            <label htmlFor='destination'> Destination</label>\r\n                            <input {...getInputProps({ autoFocus: true })} required type='text' id='destination'name='destination'  ref={desRef} />\r\n                            \r\n                            <div>\r\n                                {loading && <div>loading...</div>}\r\n\r\n                                {suggestions.map(suggestion => (\r\n\r\n                                    <div  {...getSuggestionItemProps(suggestion)}>\r\n                                        <span key={suggestion.id} >{suggestion.description}</span>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </PlacesAutocomplete>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <button type='submit'> Submit </button>\r\n                </div>\r\n                {destina && <div><pre>{destina}</pre></div>}\r\n            </form>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default DesForm;\r\n","import Modal from \"react-modal/lib/components/Modal\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport DesForm from \"./destination\";\r\n\r\n\r\nfunction Purpos({ val }) {\r\n\r\n    const [load, setLoad] = useState(false);\r\n    \r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '10%',\r\n            left: '50%',\r\n            right: '50%',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        },\r\n        overlay: {\r\n            background: ''\r\n            \r\n        }\r\n    };\r\n\r\n\r\n    const cancell = () => {\r\n        const status = \"cancelled\";\r\n        const id = val._id;\r\n\r\n        const GetData = {\r\n            \"status\": status,\r\n            \"id\": id\r\n        };\r\n\r\n        if (val.status === 'delivered' || val.status === 'cancelled') {\r\n            alert(\"order already delivered/cancelled\");\r\n\r\n        } else if (window.confirm(\"are you sure you want to cancel\")) {\r\n            fetch(`https://web-app-senditb.herokuapp.com/parcel/${id}/status`, {\r\n                method: 'put',\r\n                body: JSON.stringify(GetData),\r\n                crossDomain: true,\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n            })\r\n                .then(response =>\r\n                    response.json()\r\n                )\r\n                .then(data => {\r\n                    window.location.reload();\r\n                    alert('sucessfully cancelled');\r\n\r\n                });\r\n\r\n        } else {\r\n            window.document.location = '/senditff/get'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function closeModal() {\r\n        setLoad(false);\r\n    }\r\n\r\n\r\n\r\n    const updateD = () => {\r\n        \r\n        if (val.status === 'cancelled' || val.status === 'delivered') {\r\n            alert('already cancelled or delivered');\r\n        }\r\n        else {\r\n            setLoad(true);\r\n        }    \r\n\r\n/*            \r\n            const destination = prompt('kindly update destination', <input/>);\r\n\r\n            if (destination != null) {\r\n                const enteredDes = destination;\r\n\r\n                const id = val._id;\r\n\r\n                const dat = {\r\n                    \"id\": id,\r\n                    \"destination\": enteredDes\r\n                }\r\n\r\n\r\n                fetch(`http://localhost:5000/parcel/${id}/destination`, {\r\n\r\n                    method: 'PUT',\r\n                    body: JSON.stringify(dat),\r\n                    mode: 'cors',\r\n                    crossDomain: 'true',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;charset=utf-8'\r\n                    }\r\n\r\n\r\n                }).then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        window.location.reload();\r\n                    });\r\n\r\n            }\r\n        }\r\n*/\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        \r\n            <tr key={val._id}>\r\n                <td>{val._id}</td>\r\n                <td>{val.destination}</td>\r\n                <td>{val.location}</td>\r\n                <td>{val.recipient}</td>\r\n                <td>{val.phone}</td>\r\n                <td>{val.status}</td>\r\n                <td>{<button onClick={updateD}>edit</button>}</td>\r\n                <td>{<button onClick={cancell} >cancel</button>}</td>\r\n            </tr>\r\n            <Modal\r\n                title='enter update'\r\n                isOpen={load}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n            >\r\n                {<DesForm myId={val._id}/>}\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Purpos;","\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nimport Purpos from \"./get1\";\r\n\r\nfunction RegisterData() {\r\n    var token = JSON.parse(localStorage.getItem('token'));\r\n    var name = token\r\n\r\n    const [getResult, setGetResult] = useState([]);\r\n    const [order, setOrder] = useState();\r\n    const [deliver, setDeliver] = useState();\r\n    const [transit, setTransit] = useState();\r\n    const [entry, setEntry] = useState();\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        fetch(`https://web-app-senditb.herokuapp.com/parcel/:id/search?name=${name}`)\r\n            .then(\r\n                response => response.json())\r\n            .then(data => {\r\n                setGetResult(data);\r\n                const deliver = data.filter((item) => {\r\n                    return item.status === 'delivered';\r\n                })\r\n                setDeliver(deliver.length);\r\n\r\n                const transit = data.filter((item) => {\r\n                    return item.status === 'transit';\r\n                })\r\n                setTransit(transit.length);\r\n\r\n                setOrder(data.length);\r\n\r\n                if(data.length === 0){\r\n                    setEntry('NO ENTRY YET');\r\n                }else{\r\n                    setEntry('')\r\n                }\r\n\r\n            })\r\n    }, [name])\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            \r\n            Welcome {name}\r\n            <br></br>\r\n            <Link to='/post' > create order</Link>\r\n            <ul>\r\n\r\n                <li>Total Number Of Orders: <span id=\"order\">{order && <span>{order}</span>}</span></li>\r\n                <li>Number Of Orders Delivered: <span id=\"deliver\">{deliver && <span>{deliver}</span>}</span></li>\r\n                <li> Number Of Orders On Transit:  <span id=\"transit\">{transit && <span>{transit}</span>}</span></li>\r\n                \r\n            </ul>\r\n\r\n            <table cellPadding={40} margin={0} >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Order id</th>\r\n                        <th>destination</th>\r\n                        <th>Location</th>\r\n                        <th>recipient name</th>\r\n                        <th>recipient mobile</th>\r\n                        <th>status</th>\r\n                        <th>update destination</th>\r\n                        <th>cancel</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                   \r\n                    {\r\n                        getResult.map((val) => {\r\n                            return (\r\n                                <Purpos key={val._id} val={val} />\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </tbody>\r\n                \r\n            </table>\r\n            {entry && <div><pre>{entry}</pre></div>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default RegisterData;\r\n\r\n/*\r\n<div>\r\n                <input type='text' name='firstname' id='firstname' required placeholder='firstname' ref={firstnameRef}/>\r\n\r\n                </div>\r\n\r\n                <button type='submit'>submit</button>\r\n                <br/>\r\n                <Link to='/'> Back to homepage </Link>\r\n                <br/>\r\n                <Link to='/receive'> getall parcel </Link>\r\n                {getResult && <div role='alert'><pre>{getResult}</pre></div>}\r\n\r\n\r\n\r\n                data.map((val) => {\r\n                        <val key={val.id} />\r\n                        return(\r\n                            <ul>\r\n                                < div>\r\n                                    <li>Name: {val.name}</li>\r\n                                    <li>Email: {val.email}</li>\r\n                                    <li>Location: {val.location}</li>\r\n                                    <li>destination: {val.destination}</li>\r\n                                    <li>ID: {val._id}</li>\r\n                                    <li>password: {val.password}</li>\r\n                                    <li>{val.status}</li>\r\n                                    <Link to='/cancel'> delete data</Link>\r\n                                    <br/>\r\n                                    <Link to='/location'>update Location</Link>\r\n                                \r\n                                </div>\r\n\r\n\r\n                            </ul>\r\n                          \r\n                        );\r\n                        \r\n                    })\r\n*/\r\n","import { useRef, useState } from \"react\";\r\n\r\nfunction LocationData() {\r\n    const locationRef = useRef(null);\r\n    const nameRef = useRef(null);\r\n    const [locate, setLocate] = useState();\r\n\r\n    function SubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n            const location = locationRef.current.value;\r\n            const Id = nameRef.current.value;\r\n            const id = Id;\r\n\r\n            const add = {\r\n                \"location\": location,\r\n                \"id\": Id\r\n            }\r\n            fetch(`https://web-app-senditb.herokuapp.com/parcel/${id}/location`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(add),\r\n                mode:'cors',\r\n                crossDomain:'true',\r\n                headers:{\r\n                    'Content-Type': 'application/json;chrset=utf-8'\r\n                }\r\n            })\r\n                .then(response =>\r\n                    response.json())\r\n                .then((data) => {\r\n\r\n                    setLocate(JSON.stringify(data));\r\n\r\n                });\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={SubmitHandler}>\r\n                <div>\r\n                    <input type='text' name='location' id='location' required placeholder='location' ref={locationRef} />\r\n\r\n                </div>\r\n                <div>\r\n                    <input type='string' name='id' id='id' required placeholder='enter id' ref={nameRef} />\r\n                </div>\r\n\r\n                <button type='submit'>submit</button>\r\n\r\n            </form>\r\n            {locate && <div><pre>{locate}</pre> </div>}\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\nexport default LocationData;","import { useRef } from 'react';\r\n\r\n\r\nfunction LocForm({ myne }) {\r\n    const locRef = useRef();\r\n    \r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredLoc = locRef.current.value;\r\n\r\n        const id = myne;\r\n        console.log(id);\r\n        const GetData = {\r\n            \"status\": enteredLoc,\r\n            \"id\": id\r\n        };\r\n        fetch(`https://web-app-senditb.herokuapp.com/parcel/${id}/status`, {\r\n            method: 'put',\r\n            body: JSON.stringify(GetData),\r\n            crossDomain: true,\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n        })\r\n            .then(response =>\r\n                response.json()\r\n            )\r\n            .then(data => {\r\n                window.location.reload();\r\n                console.log(data);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <label htmlFor='status'> Status</label>\r\n\r\n                    <select id=\"status\" name=\"status\" ref={locRef} required >\r\n                        <option value=\"transit\"> transit</option>\r\n                        <option value=\"delivered\"> delivered</option>\r\n                    </select>\r\n\r\n                    <div>\r\n                        <button type='submit'> Submit </button>\r\n                    </div>\r\n\r\n                </form>\r\n            \r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default LocForm;\r\n","import { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react/cjs/react.development';\r\nimport classes from './main.module.css';\r\n\r\nfunction WelcomePage() {\r\n    const [timec, setTimec] = useState();\r\n    const [changes, setChanges] = useState();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let gist = [\"You are welcome to our website\", \"We offer the best service ever\", \"A trier will confuse you\", \"Always stay tune for the latest\"];\r\n        let counter = 0;\r\n\r\n        setInterval(\r\n            function text() {\r\n                \r\n                if (counter >= gist.length) {\r\n                    counter = 0;\r\n    \r\n                }\r\n                \r\n                setChanges(gist[counter]);\r\n                counter ++;\r\n                \r\n            },\r\n            2000);\r\n    }, []);\r\n\r\n\r\n\r\n    setInterval(() => {\r\n        var date = new Date();\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var seconds = date.getSeconds();\r\n        let day = \"AM\";\r\n        if (hours > 12) {\r\n            hours = hours - 12;\r\n            day = 'PM'\r\n        }\r\n        if (hours < 10) {\r\n            hours = '0' + hours;\r\n        }\r\n        if (minutes < 10) {\r\n            minutes = '0' + minutes;\r\n        }\r\n        if (seconds < 10) {\r\n            seconds = '0' + seconds;\r\n        }\r\n\r\n        setTimec(hours + \":\" + minutes + \":\" + seconds + \":\" + day);\r\n\r\n    });\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.bod}>\r\n            <nav className={classes.top}>\r\n                <ul>\r\n                    <li><Link to='/'> Home </Link></li>\r\n                    <li><Link to='/register'> Register </Link></li>\r\n                    <li><Link to='/login'> Login </Link></li>\r\n                    <li><Link to='/'> About </Link></li>\r\n                </ul>\r\n            </nav>\r\n            <section className={classes.body}>\r\n                <div className={classes.mage}>\r\n                    {changes && <div><pre>{changes}</pre></div>}\r\n                    <button>Learn more</button>\r\n                </div>\r\n            </section>\r\n            {timec && <div><pre>{timec}</pre></div>}\r\n            <footer className={classes.footer}>\r\n                <div className={classes.footerCon}>\r\n                    <div id=\"about\">\r\n                        <h1>About</h1>\r\n                        <p>SendIt is a superfast delivery company aimed at making life better</p>\r\n                    </div>\r\n                    <div id=\"contact\">\r\n                        <h1>Contact</h1>\r\n                        <p>customer service: 08086107117</p>\r\n                        <p>No.32 laula Street, Lagos State</p>\r\n                    </div>\r\n                    <div id=\"socials\">\r\n                        <h1>Socials</h1>\r\n                        <p>you can get to us via our social media handles:</p>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </footer>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default WelcomePage;","import { useRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './admin.module.css';\r\n\r\n\r\nfunction AdminForm(props) {\r\n    const userRef = useRef();\r\n    const passRef = useRef();\r\n\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredUser = userRef.current.value;\r\n        const enteredPass = passRef.current.value;\r\n\r\n        const GetData = {\r\n            username: enteredUser,\r\n            password: enteredPass\r\n        }\r\n        props.sendData(GetData);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.form}>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor='username'> Username</label>\r\n                    <input required type='text' id='username' ref={userRef} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor='password'> Password</label>\r\n                    <input  required type='text' id='password' ref={passRef} />\r\n                </div>\r\n                <div>\r\n                    <button type='submit'> Submit </button>\r\n                </div>\r\n            </form>\r\n            <nav>\r\n                <Link to='/login'> go to login </Link>\r\n            </nav>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default AdminForm;\r\n","import AdminForm from \"../pages/admin\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction AdminParcel(){\r\n    const [Valu, setValu] = useState(true);\r\n    const Navigate = useNavigate();\r\n\r\n\r\n    function AdminDetail(GetData){\r\n        fetch('https://web-app-senditb.herokuapp.com/admin/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify(GetData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then((data) => {\r\n            if(data){\r\n                console.log(data);\r\n                Navigate('/get');\r\n                \r\n            }\r\n            \r\n        });\r\n\r\n        setValu('username or password not match');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <AdminForm sendData={AdminDetail} />\r\n            {Valu && <div role='alert' ><pre>{Valu}</pre> </div> }\r\n        </div>\r\n        \r\n\r\n    );\r\n\r\n}\r\nexport default AdminParcel;","import { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport LocForm from \"../pages/status\";\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nfunction Tbod({ valo, editable, del, myne }) {\r\n\r\n    const [load, setLoad] = useState(false);\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '10%',\r\n            left: '50%',\r\n            right: '50%',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        },\r\n        overlay: {\r\n            background: ''\r\n            \r\n        }\r\n    };\r\n\r\n    const id = myne;\r\n\r\n    function myn() {\r\n\r\n        if (valo.status === 'transit' || valo.status === 'ready for pickup') {\r\n            alert('cannot be deleted, Order still in transit and not yet delivered');\r\n        } else if (window.confirm(\"are you sure you want to delete\")) {\r\n            fetch(`https://web-app-senditb.herokuapp.com/parcel/${id}/cancel`, {\r\n                method: 'DELETE',\r\n                mode: 'cors',\r\n                crossDomain: 'true',\r\n                body: JSON.stringify(id),\r\n                headers: {\r\n                    'Content-Type': 'application/json:charset=utf-8'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n                    alert('succesfully deleted')\r\n\r\n                });\r\n\r\n        } else {\r\n\r\n            window.document.location = '/senditff/receive';\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function edita() {\r\n        if (valo.status === 'cancelled' || valo.status === 'delivered') {\r\n            alert('already cancelled or delivered');\r\n        }\r\n        else {\r\n            setLoad(true);\r\n        }    \r\n\r\n    }\r\n\r\n    function closeModal() {\r\n        setLoad(false);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <tr>\r\n                <td>{valo._id}</td>\r\n                <td>{valo.destination}</td>\r\n                <td>{valo.location}</td>\r\n                <td>{valo.status}</td>\r\n                <td>{<button type=\"button\" onClick={edita}>edit</button>}</td>\r\n                <td>{<button onClick={myn}>Delete</button>}</td>\r\n            </tr>\r\n            <Modal\r\n                title='enter update'\r\n                isOpen={load}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n            >\r\n                <LocForm myne={id} />\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Tbod;\r\n","\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport Tbod from \"./body\";\r\nimport LocForm from \"../pages/status\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ReceiveAll() {\r\n    const[contact, setContact] = useState([])\r\n    const [load, setLoad] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://web-app-senditb.herokuapp.com/parcel/getall')\r\n            .then(\r\n                response => response.json()\r\n            ).then((data) => {\r\n                \r\n                setContact(data)\r\n\r\n            });\r\n    }, [contact]);\r\n\r\n    \r\n\r\n    function edity(){\r\n        setLoad(true);\r\n    }\r\n\r\n    function disappear(){\r\n        setLoad(load);\r\n    }\r\n\r\n    function delet(){\r\n        alert('deleted');\r\n\r\n    }\r\n\r\n    return (\r\n        <div >  \r\n            <Link to='../'>Logout</Link>\r\n            {load ? <LocForm oncance={disappear} /> : null }\r\n            <table cellPadding={40} cellSpacing={0} >\r\n                <thead>\r\n                    <tr>\r\n                        <th>orderid</th>\r\n                        <th>destination</th>\r\n                        <th>location</th>\r\n                        <th>status</th>\r\n                        <th>Update Status</th>\r\n                        <th>Delete order</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody> \r\n                    {contact.map((valo) => (\r\n                        <Fragment key={valo._id}>\r\n                            <Tbod   myne={valo._id} valo={valo} editable={edity} del={delet} />\r\n                             \r\n\r\n                        \r\n                        </Fragment>\r\n                           \r\n                    ))};\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}\r\n/*\r\n{setLoadData.map((val) => (\r\n    <tr>\r\n        <td>{val._id}</td>\r\n        <td>{val.destination}</td>\r\n        <td>{val.location}</td>\r\n        <td>{val.status}</td>\r\n        <td>{<button onClick={edit}>edit</button>}</td>\r\n        <td>{<button onClick={cancel}>cancel</button>}</td>\r\n\r\n    </tr>\r\n))}\r\n*/\r\n\r\nexport default ReceiveAll;","import { useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction LoginForm(props) {\r\n    const userRef = useRef();\r\n    const passRef = useRef();\r\n    \r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredUser = userRef.current.value;\r\n        const enteredPass = passRef.current.value;\r\n        \r\n        const GetData= {\r\n            email: enteredUser,\r\n            password: enteredPass\r\n        }\r\n        props.sendData(GetData);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            <br></br>\r\n            <div>\r\n                <label htmlFor='email'> Email </label>\r\n                <input  required type='email' id='email' ref={userRef} />\r\n            </div>\r\n            <br></br>\r\n            <div>\r\n                <label htmlFor='password'> Password</label>\r\n                <input  required type='password' id='password' ref={passRef} />\r\n            </div>\r\n            <br></br>\r\n            <div>\r\n                <button type='submit'> Submit </button>\r\n            </div>\r\n            NOT YET A USER?<Link to='/register'> REGISTER</Link>\r\n            <br></br>\r\n            <Link to='/'>Go to homepage</Link>\r\n        </form>\r\n        \r\n    </div>\r\n\r\n\r\n    );\r\n}   \r\nexport default LoginForm;\r\n","\r\nimport LoginForm from \"../pages/login\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n/*\r\nimport { useNavigate } from \"react-router\";\r\nconst History = useNavigate();\r\n    History('/post');\r\n*/\r\n\r\nfunction LoginParcel() {\r\n    const [load, setLoad] = useState();\r\n    const History = useNavigate();\r\n    \r\n\r\n    function AdminDetail(GetData) {\r\n        console.log(GetData);\r\n        fetch('https://web-app-senditb.herokuapp.com/admin/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(GetData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n        }).then(response => response.json())\r\n        .then((data) => {\r\n            \r\n            if(data.status === 'error'){\r\n                setLoad('email or password not match');\r\n\r\n            }else if(GetData.email === \"lmn@gmail.com\" && GetData.password === 'toheeb'){\r\n                History('/receive')\r\n                setLoad(data)\r\n            }\r\n            else{\r\n                History('/get');\r\n                setLoad(data)\r\n                localStorage.setItem('token', JSON.stringify(data));\r\n            }\r\n        });\r\n       \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <LoginForm sendData={AdminDetail} />\r\n            {load && <div><pre>{load}</pre></div>}\r\n        \r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default LoginParcel;","import { useRef } from 'react';\r\n\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\n\r\n\r\n\r\nfunction PostForm(props) {\r\n    const [address, setAddress] = useState('');\r\n    const [address1, setAddress1] = useState('');\r\n    const [value, setValue] = useState();\r\n\r\n    const destinationRef = useRef();\r\n    const locationRef = useRef();\r\n    const phoneRef = useRef();\r\n    const recipientRef = useRef();\r\n    var token = JSON.parse(localStorage.getItem('token'));\r\n    var name = token\r\n    var status = 'ready for pickup';\r\n\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const enteredDes = destinationRef.current.value;\r\n        const enteredLoc = locationRef.current.value;\r\n        const enteredPhone = phoneRef.current.value;\r\n        const enteredRecipient = recipientRef.current.value;\r\n\r\n        const GetData = {\r\n\r\n            destination: enteredDes,\r\n            location: enteredLoc,\r\n            status: status,\r\n            name: name,\r\n            recipient: enteredRecipient,\r\n            phone: enteredPhone\r\n        }\r\n        props.sendData(GetData);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <br></br>\r\n                    <PlacesAutocomplete\r\n                        value={address}\r\n                        onChange={setAddress}\r\n                    >\r\n                        {({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\r\n                            <div>\r\n                                <label htmlFor='destination'> destination </label>\r\n                                <input  {...getInputProps({ autoFocus: true })} required type='text' id='destination' ref={destinationRef} />\r\n                                <div>\r\n                                    {loading && <div>loading...</div>}\r\n\r\n                                    {suggestions.map(suggestion => (\r\n\r\n                                        <div  {...getSuggestionItemProps(suggestion)}>\r\n                                            <span key={suggestion.id} >{suggestion.description}</span>\r\n                                        </div>\r\n\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </PlacesAutocomplete>\r\n                                        <br></br>\r\n                    <PlacesAutocomplete\r\n                        value={address1}\r\n                        onChange={setAddress1}\r\n                    >\r\n                        {({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\r\n                            <div>\r\n                                <label htmlFor='location'>pickup Location</label>\r\n                                <input  {...getInputProps({ autoFocus: true })} required type='text' id='location' ref={locationRef} />\r\n                                <div>\r\n                                    {loading && <div>loading...</div>}\r\n\r\n                                    {suggestions.map(suggestion => (\r\n\r\n                                        <div  {...getSuggestionItemProps(suggestion)}>\r\n                                            <span key={suggestion.id} >{suggestion.description}</span>\r\n                                        </div>\r\n\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </PlacesAutocomplete>\r\n                    <br></br>\r\n                    <div>\r\n                        <label htmlFor='phone'></label>\r\n                        <PhoneInput international defaultCountry=\"RU\" countryCallingCodeEditable={false} value={value} onChange={setValue} required type='tel' id='phone' ref={phoneRef} placeholders='phone no'/>\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        <label htmlFor='recipient'> recipient</label>\r\n                        <input required type='text' id='recipient' ref={recipientRef} />\r\n                    </div>\r\n                    <br></br>\r\n                    <div>\r\n                        <button type='submit'> Submit </button>\r\n                    </div>\r\n\r\n                    \r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nexport default PostForm;\r\n","import PostForm from \"../pages/post\";\r\nimport { useState } from 'react';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction PostParcel(){\r\n    const Navigate = useNavigate();\r\n    const [data, setData] = useState();\r\n\r\n\r\n    function AdminDetail(GetData){\r\n\r\n        fetch('https://web-app-senditb.herokuapp.com/parcel', {\r\n\r\n            method: 'POST',\r\n            body: JSON.stringify(GetData),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(Response => Response.json())\r\n        .then( (data) => {\r\n\r\n            console.log(data);\r\n            setData(JSON.stringify(data));\r\n            Navigate('/get');\r\n        });\r\n        setData(data);\r\n       \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <PostForm sendData={ AdminDetail } />\r\n        </div>\r\n        \r\n\r\n    );\r\n\r\n}\r\nexport default PostParcel;","import { useRef } from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\nimport { useState } from 'react/cjs/react.development';\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction RegisterForm(props) {\r\n    const [address, setAddress] =useState('');\r\n    const [value, setValue] = useState();\r\n    const [passw, setPassw] = useState();\r\n    const [emailv, setEmailv] = useState();\r\n    \r\n    const passRef = useRef();\r\n    const cpassRef = useRef();\r\n    const firstRef = useRef();\r\n    const lastRef = useRef();\r\n    const emailRef = useRef();\r\n    const phoneRef = useRef();\r\n    const addressRef = useRef();\r\n\r\n\r\n    function handleSubmit(event) {\r\n       \r\n        event.preventDefault();\r\n\r\n        const enteredCpass = cpassRef.current.value;\r\n        const enteredPass = passRef.current.value;\r\n        const enteredFirst = firstRef.current.value;\r\n        const enteredLast = lastRef.current.value;\r\n        const enteredEmail = emailRef.current.value;\r\n        const enteredAddress = addressRef.current.value;\r\n        const enteredPhone = phoneRef.current.value;\r\n\r\n        const GetData = {\r\n            confirmPassword: enteredCpass,\r\n            password: enteredPass,\r\n            nama: enteredFirst,\r\n            namo: enteredLast,\r\n            email: enteredEmail,\r\n            phone: enteredPhone,\r\n            address: enteredAddress\r\n        }\r\n       \r\n        props.sendData(GetData);\r\n\r\n    };\r\n\r\n    function displayp(){\r\n        const enteredCpass = cpassRef.current.value;\r\n        const enteredPass = passRef.current.value;\r\n        \r\n        if(enteredCpass !== enteredPass){\r\n            setPassw('password not match');\r\n        }\r\n        else{\r\n            setPassw('')\r\n        }\r\n    }\r\n\r\n    function emailva(){\r\n        const vall = \"^[a-zA-ZO]+@[a-zA-ZO]+\\\\.[A-Za-z]+$\";\r\n        const enteredEmail = emailRef.current.value;\r\n        if(enteredEmail.match(vall)){\r\n            setEmailv('')\r\n        }else{\r\n            setEmailv('Not a valid email');\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit} >\r\n                <br></br>\r\n        \r\n                <div>\r\n                    <label htmlFor='nama'> Firstname</label>\r\n                    <input required type='text' id='nama' ref={firstRef} />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <label htmlFor='namo'> Lastname</label>\r\n                    <input required type='text' id='namo' ref={lastRef} />\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <label htmlFor='password'> Password</label>\r\n                    <input required  type='password' id='password' name='password' ref={passRef}/>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <label htmlFor='confirmPassword'> confirmPassword</label>\r\n                    <input required onChange={displayp} type='password' id='confirmPassword' name='confirmPassword' ref={cpassRef} />\r\n                    {passw && <div><pre>{passw}</pre></div>}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <label  htmlFor='email'> Email</label>\r\n                    <input required onChange={emailva} type='email' id='email' ref={emailRef} />\r\n                    {emailv && <div><pre>{emailv}</pre></div>}\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <label htmlFor='phone'></label>\r\n                    <PhoneInput international defaultCountry=\"RU\" countryCallingCodeEditable={false} value={value} onChange={setValue} required type='tel' id='phone' ref={phoneRef} />\r\n                </div>\r\n                <br></br>\r\n                <PlacesAutocomplete\r\n                    value={address}\r\n                    onChange={setAddress}\r\n                >\r\n                    {({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\r\n                        <div>\r\n                            <label htmlFor='address'>address</label>\r\n                            <input  {...getInputProps({ autoFocus: true })} required type='text' id='address' ref={addressRef} />\r\n                            <div>\r\n                                {loading && <div>loading...</div>}\r\n\r\n                                {suggestions.map(suggestion => (\r\n\r\n                                    <div  {...getSuggestionItemProps(suggestion)}>\r\n                                        <span key={suggestion.id} >{suggestion.description}</span>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </PlacesAutocomplete>\r\n                <br></br>\r\n                <div>\r\n                    <button type='submit'> Submit </button>\r\n                </div>\r\n                Already have an account:<Link to='/login'>Login</Link>\r\n               \r\n               \r\n            </form>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default RegisterForm;\r\n\r\n/*\r\nconst initMap = () => {\r\n        var autocomplete;\r\n            \r\n        autocomplete = new google.maps.places.Autocomplete(addressRef.current.value, {\r\n            types:['geocode'],\r\n    \r\n        });\r\n       \r\n        google.maps.event.addListener(autocomplete, 'place_changed', function(){\r\n            var near_place = autocomplete.getPlace();\r\n        });\r\n    }\r\n*/","import { useNavigate } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport RegisterForm from \"../pages/register\";\r\n\r\n\r\n\r\nfunction RegisterParcel(){\r\n    const [stat, setStat] = useState();\r\n    const Navigate = useNavigate();\r\n    \r\n\r\n    function AdminDetail(GetData){\r\n        fetch('https://web-app-senditb.herokuapp.com/admin/pass', {\r\n            method: 'POST',\r\n            body: JSON.stringify(GetData),\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n                \r\n            }\r\n        }).then(response => response.json())\r\n        .then( (data) => {\r\n            console.log(data);\r\n            if(GetData.confirmPassword !== GetData.password){\r\n                alert('password are not the same');\r\n            }\r\n            else if(data.status === \"error\"){\r\n                setStat(\"Email already exiist\");\r\n                alert('Email already exist');\r\n            }\r\n            else{\r\n                Navigate('/login'); \r\n        \r\n            }\r\n             \r\n        })\r\n       \r\n\r\n       \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            \r\n             <RegisterForm sendData={AdminDetail} />\r\n             {stat &&  <div><pre>{stat}</pre></div> }\r\n            \r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default RegisterParcel;","\nimport { Routes, Route, Outlet } from \"react-router\";\n\nimport CancelData from \"./pages/delete\";\nimport DesForm from './pages/destination';\nimport RegisterData from './pages/get';\nimport LocationData from './pages/location';\nimport LocForm from './pages/status';\nimport WelcomePage from \"./pages/main\";\n\nimport AdminParcel from \"./parcels/Admin1\";\n\n\n\nimport ReceiveAll from \"./parcels/getall\";\nimport LoginParcel from \"./parcels/login\";\nimport PostParcel from \"./parcels/post\";\nimport RegisterParcel from \"./parcels/register\";\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Routes>\n        <Route path='/admin' element={<AdminParcel />} />\n\n        <Route path='/login' element={< LoginParcel />}  />\n\n        <Route path='/register' element={< RegisterParcel />}  />\n\n        <Route path='/post' element={< PostParcel />}  />\n\n        <Route path='/receive' element={< ReceiveAll />}  />\n\n        <Route path='/cancel' element={< CancelData />}  />\n\n        <Route index  element={< WelcomePage />}  />\n       \n        <Route path='/admin' element={<AdminParcel />} />\n\n        <Route path='/get' element={<RegisterData />} />\n\n        <Route path='/destination' element={<DesForm />} />\n\n        <Route path='/location' element={<LocationData />} />\n\n        <Route path='/status' element={<LocForm />} />\n\n        \n      </Routes>\n      <Outlet />\n    \n    </div>\n\n  );\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport App from './App';\nimport './index.css';\n\n\n\n\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL} >\n    <Routes>\n\n      <Route exact path= '*'  element={<App />}  />\n        \n     \n    </Routes>\n\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}